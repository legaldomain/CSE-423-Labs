from OpenGL.GL import *
from OpenGL.GLUT import *
from OpenGL.GLU import *
import random


def draw_points():

    glPointSize(5) #pixel size

    glBegin(GL_POINTS)
    coordinate_points = 50
    for i in range(coordinate_points):
        x = random.randint(1, 500)
        y = random.randint(1, 500)
        glVertex2f(x, y)

    glEnd()


def iterate():
    glViewport(0, 0, 500, 500) #window rendering hobe, 00 - lower left corner of the viewport, 500,500-width and height of the viewport
    glMatrixMode(GL_PROJECTION) #mode is used for defining the projection matrix
    glLoadIdentity() #represents the default state of the matrix jekhae no transformations are applied till now
    glOrtho(0.0, 500, 0.0, 500, 0.0, 1.0)
    glMatrixMode (GL_MODELVIEW)
    glLoadIdentity()


def showScreen():
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT) #color and depth buffer, ager ta clear kore new ta call korar age
    glLoadIdentity()
    iterate()
    glColor3f(0.0, 1.0, 0.0) #RGB color set kora

    # draw_points function to draw pixels.
    draw_points()
    glutSwapBuffers()


glutInit()
glutInitDisplayMode(GLUT_RGBA)
glutInitWindowSize(500, 500)
glutInitWindowPosition(0, 0)
window_name = glutCreateWindow(b"task 1: 50 random pixs") #convert string to byte object jeta glutui e dorkar
glutDisplayFunc(showScreen)
glutMainLoop()